version: '3'
services:
    web:
      build: .
      ports:
        - 80:3003

    mongo:
      image: mongo
      restart: always
      # DB Ports not exposed by default.
      # ports:
      #   - 27017:27017
      volumes:
        - mongoData:/data/db
      environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSOWORD:-P@ssw00rd!}
      networks:
        - backend

    backend:
      image: testing-webapp-server
      restart: always
      build:
        context: ./server
        dockerfile: ./Dockerfile
      command: dev
      ports:
        - 5000:5000
      environment:
        MONGO_USERNAME: ${MONGO_USERNAME:-root}
        MONGO_PASSOWORD: ${MONGO_PASSOWORD:-P@ssw00rd!}
        MONGO_HOST: ${MONGO_HOST:-mongo}
        MONGO_PORT: ${MONGO_PORT:-27017}
        MONGO_DATABASE: ${MONGO_DATABASE:-test_execution_result}
        API_KEY_BB: ${API_KEY_BB:-asudbq827ebsadon}
        PORT: ${BACKEND_PORT:-5000}
      depends_on:
        - mongo
      networks:
        - backend

    nginx:
      container_name: nginx
      image: nginxproxy/nginx-proxy
      restart: unless-stopped
      ports:
        - 80:80
        - 443:443
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - /var/docker/nginx/html:/usr/share/nginx/html
        - /var/docker/nginx/certs:/etc/nginx/certs
        - /var/docker/nginx/vhost:/etc/nginx/vhost.d
      logging:
        options:
          max-size: "10m"
          max-file: "3"

    letsencrypt-companion:
      container_name: letsencrypt-companion
      image: jrcs/letsencrypt-nginx-proxy-companion
      restart: unless-stopped
      volumes:
        - /var/docker/nginx/html:/usr/share/nginx/html
        - /var/docker/nginx/certs:/etc/nginx/certs
        - /var/docker/nginx/vhost:/etc/nginx/vhost.d
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/docker/nginx/acme:/etc/acme.sh

    hello-world:
      container_name: hello-world
      image: kornkitti/express-hello-world
      expose:
        - "8080"
      environment:
        VIRTUAL_HOST: test.programonaut.com
        LETSENCRYPT_HOST: test.programonaut.com

networks:
  backend:

volumes:
  mongoData:
